{"version":3,"sources":["components/Header.tsx","components/Item.tsx","data.ts","components/Draggable.tsx","components/Group.tsx","hooks/useGroupedItems.ts","App.tsx","index.tsx"],"names":["Header","isHorizontal","onChangeIsHorizontal","handleChange","useCallback","e","target","checked","className","type","onChange","React","memo","Icon","xmlns","viewBox","width","height","aria-hidden","fill-rule","d","Item","contents","title","ItemTypes","GroupTypes","TitleMap","todo","doing","done","items","id","group","Draggable","item","index","onMove","children","ref","useRef","useDrop","accept","hover","dragItem","monitor","current","dragIndex","hoverIndex","hoverRect","getBoundingClientRect","hoverMiddleY","bottom","top","mousePosition","getClientOffset","hoverClientY","y","drop","useDrag","isDragging","getItem","collect","canDrag","drag","style","opacity","cursor","Group","groupType","firstIndex","targetIndex","length","join","map","i","useGroupedItems","useState","list","setList","groupedItems","setGroupedItems","useEffect","reduce","acc","filter","v","App","initial","setItems","moveItem","prevState","newItems","_","idx","splice","setIsHorizontal","DndProvider","backend","HTML5Backend","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d97c8d5d.chunk.js","sourcesContent":["import React, { useCallback, ChangeEventHandler } from 'react';\n\nimport './Header.css';\n\nconst Header: React.FC<{\n  isHorizontal: boolean;\n  onChangeIsHorizontal: (isHorizontal: boolean) => void;\n}> = ({ isHorizontal, onChangeIsHorizontal }) => {\n  const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\n    onChangeIsHorizontal(e.target.checked);\n  }, [onChangeIsHorizontal]);\n\n  return (\n    <header className='header'>\n      <h1>Kanban with React DnD</h1>\n      <label className='checkbox'>\n        <input type=\"checkbox\" onChange={handleChange} checked={isHorizontal}/>\n        Horizontal?\n      </label>\n    </header>\n  );\n}\n\nexport default React.memo(Header);\n","import React from 'react';\n\nimport './Item.css';\nimport type { Contents } from '../data';\n\n// use https://primer.style/octicons/note-16\nconst Icon = () => (\n  <svg className='icon' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"24\" height=\"24\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 14H1.75A1.75 1.75 0 010 12.25v-8.5zm1.75-.25a.25.25 0 00-.25.25v8.5c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-8.5a.25.25 0 00-.25-.25H1.75zM3.5 6.25a.75.75 0 01.75-.75h7a.75.75 0 010 1.5h-7a.75.75 0 01-.75-.75zm.75 2.25a.75.75 0 000 1.5h4a.75.75 0 000-1.5h-4z\"></path></svg>\n);\n\nconst Item: React.FC<{\n  id: number;\n  contents: Contents\n}> = ({ contents }) => (\n  <div  className='item'>\n    <Icon/>\n    <div className='contents'>\n      <p className='title'>{contents.title}</p>\n      <p className='memo'>{contents.memo}</p>\n    </div>\n  </div>\n);\n\nexport default Item;\n","export const ItemTypes = ['item' as const];\nexport type ItemType = (typeof ItemTypes)[number];\nexport const GroupTypes = ['todo', 'doing', 'done'] as const;\nexport type GroupType = (typeof GroupTypes)[number];\nexport type Contents = {\n  title: string;\n  memo?: string;\n};\nexport type Item = {\n  id: number;\n  type: ItemType;\n  group: GroupType;\n  contents: Contents;\n};\nexport type ItemWithIndex = Item & {\n  index: number;\n};\nexport type MoveHandler = (dragIndex: number, targetIndex: number, groupType: GroupType) => void;\nexport const TitleMap = {\n  todo: 'Todo',\n  doing: 'Doing',\n  done: 'Done',\n} as const;\n\nexport const items: Item[] = [{\n  id: 1,\n  type: 'item',\n  group: 'todo',\n  contents: {\n    title: 'Writing a Blog',\n    memo: 'Writing about React-dnd in Advent Calender',\n  },\n}, {\n  id: 2,\n  type: 'item',\n  group: 'todo',\n  contents: {\n    title: 'Create a example',\n    memo: 'Prepare a sample app to explain about React-dnd in blog',\n  },\n}, {\n  id: 3,\n  type: 'item',\n  group: 'todo',\n  contents: {\n    title: 'Going to buy coffee',\n  },\n}, {\n  id: 4,\n  type: 'item',\n  group: 'todo',\n  contents: {\n    title: 'Enjoy the holidays',\n    memo: 'Want to relax',\n  },\n}, {\n  id: 5,\n  type: 'item',\n  group: 'todo',\n  contents: {\n    title: 'Watching Movie',\n    memo: 'Want to watch Demon Slayer in theaters',\n  },\n}, {\n  id: 6,\n  type: 'item',\n  group: 'doing',\n  contents: {\n    title: 'Reading Manga',\n    memo: 'Want to read Demon Slayer comic',\n  },\n}];\n","import React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport './Item.css';\nimport { Item, ItemWithIndex, ItemTypes, MoveHandler } from '../data';\n\nconst Draggable: React.FC<{\n  item: Item, index: number, onMove: MoveHandler\n}> = ({\n  item, index, onMove, children\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes,\n    hover(dragItem: ItemWithIndex, monitor) {\n      if (!ref.current) return;\n      const dragIndex = dragItem.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) return;\n\n      if (item.group === dragItem.group) {\n        const hoverRect = ref.current.getBoundingClientRect();\n        const hoverMiddleY = (hoverRect.bottom - hoverRect.top) / 2;\n        const mousePosition = monitor.getClientOffset();\n        if (!mousePosition) return;\n        const hoverClientY = mousePosition.y - hoverRect.top;\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY * 0.5) return;\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY * 1.5) return;\n      }\n\n      onMove(dragIndex, hoverIndex, item.group);\n      dragItem.index = hoverIndex;\n      dragItem.group = item.group;\n    }\n  });\n\n  const [{ isDragging, canDrag }, drag] = useDrag({\n    item: { ...item, index },\n    isDragging: monitor => monitor.getItem().id === item.id,\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      canDrag: monitor.canDrag(),\n    })\n  })\n\n  drag(drop(ref));\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        opacity: isDragging ? 0.4 : 1,\n        cursor: canDrag ? 'move' : 'default',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Draggable;\n","import React from 'react';\nimport { useDrop } from 'react-dnd';\n\nimport './Group.css';\nimport Item from './Item';\nimport Draggable from './Draggable';\nimport { Item as _Item, ItemWithIndex, GroupType, ItemTypes, TitleMap, MoveHandler } from '../data';\n\nconst Group: React.FC<{\n  items: _Item[];\n  groupType: GroupType;\n  firstIndex: number;\n  onMove: MoveHandler;\n}> = ({ items, groupType, firstIndex, onMove }) => {\n  const [, ref] = useDrop({\n    accept: ItemTypes,\n    hover(dragItem: ItemWithIndex) {\n      const dragIndex = dragItem.index;\n      if (dragItem.group === groupType) return;\n      const targetIndex = dragIndex < firstIndex ?\n        // forward\n        firstIndex + items.length - 1 :\n        // backward\n        firstIndex + items.length;\n      onMove(dragIndex, targetIndex, groupType);\n      dragItem.index = targetIndex;\n      dragItem.group = groupType;\n    }\n  });\n\n  return (\n    <div className={['group', groupType].join(' ')}>\n      <h2><span className='count'>{items.length }</span>{TitleMap[groupType]}</h2>\n      <ul className='list' ref={ref}>\n        {items.map((item, i) => {\n          return (\n            <li key={item.id} className='item-wrapper'>\n              <Draggable item={item} index={firstIndex + i} onMove={onMove}>\n                <Item id={item.id} contents={item.contents} />\n              </Draggable>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Group;\n","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { Item, GroupType, GroupTypes } from '../data';\n\ntype GroupedItems = {\n  [k in GroupType]?: Item[]\n};\ntype UseGroupedItems = (items: Item[]) => [GroupedItems, Item[], Dispatch<SetStateAction<Item[]>>];\n\nconst useGroupedItems: UseGroupedItems = (items) => {\n  const [list, setList] = useState<Item[]>(items);\n  const [groupedItems, setGroupedItems] = useState<GroupedItems>({});\n  useEffect(() => {\n    setGroupedItems(\n      GroupTypes.reduce<GroupedItems>((acc, group) => {\n        acc[group] = list.filter(v => v.group === group);\n        return acc;\n      }, {})\n    );\n  }, [list])\n  return [groupedItems, list, setList];\n};\n\nexport default useGroupedItems;\n","import React, { useState, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport './App.css';\nimport Header from './components/Header';\nimport Group from './components/Group';\nimport useGroupedItems from './hooks/useGroupedItems';\nimport { items as initial, GroupTypes, MoveHandler } from './data';\n\nconst App = () => {\n  const [groupedItems, items, setItems] = useGroupedItems(initial);\n  const moveItem: MoveHandler = useCallback((dragIndex, targetIndex, group) => {\n    const item = items[dragIndex];\n    if (!item) return;\n    setItems(prevState => {\n      const newItems = prevState.filter((_, idx) => idx !== dragIndex);\n      newItems.splice(targetIndex, 0, { ...item, group });\n      return newItems;\n    })\n  }, [items, setItems]);\n  const [isHorizontal, setIsHorizontal] = useState(true);\n  let index = 0;\n\n  return (\n    <div className='app'>\n      <Header isHorizontal={isHorizontal} onChangeIsHorizontal={setIsHorizontal}/>\n      <div className={isHorizontal ? 'horizontal' : ''}>\n        <DndProvider backend={HTML5Backend}>\n          {GroupTypes.map(group => {\n            const items = groupedItems[group];\n            const firstIndex = index;\n            if (items === undefined) return null;\n            index = index + items.length;\n\n            return (\n              <section className={['group-section', isHorizontal ? 'horizontal' : ''].join(' ')}>\n                <Group\n                  key={group}\n                  items={items}\n                  groupType={group}\n                  firstIndex={firstIndex}\n                  onMove={moveItem}\n                />\n              </section>\n            )\n          })}\n        </DndProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}